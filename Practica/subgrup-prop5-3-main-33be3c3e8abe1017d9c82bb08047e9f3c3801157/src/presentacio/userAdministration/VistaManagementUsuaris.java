package presentacio.userAdministration;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import domini.usuari.Usuari;
import presentacio.CtrlPresentacio;
import presentacio.userAdministration.vistaEditarUsuari.VistaAfegirUsuari;
import presentacio.userAdministration.vistaFilaUsuari.FilaUsuari;

import javax.swing.*;
import java.awt.*;
import java.util.Map;

/**
 * Classe que genera la vista per administrar els usuaris del sistema
 *
 * @author Hector Godoy Creus
 */
public class VistaManagementUsuaris {
    private JPanel panel;
    private JScrollPane jScrollPane;
    private JButton crearUsuariButton;

    public VistaManagementUsuaris() {
        crearUsuariButton.addActionListener(e -> {
            JFrame frameDefinirAtributs = new JFrame("Crear usuari");
            frameDefinirAtributs.pack();
            frameDefinirAtributs.setContentPane(new VistaAfegirUsuari().getPanel());
            frameDefinirAtributs.setSize(new Dimension(600, 400));
            frameDefinirAtributs.setLocationRelativeTo(CtrlPresentacio.getInstance().frame);
            frameDefinirAtributs.setMinimumSize(new Dimension(550, 400));
            frameDefinirAtributs.setVisible(true);
        });
    }

    public JPanel getPanel() {
        return panel;
    }

    public void initList(Map<String, Usuari> usuaris) {
        JPanel listPanel = new JPanel(new GridLayout(usuaris.size(), 1));
        for (Usuari user : usuaris.values()) {
            listPanel.add(new FilaUsuari(user).getPanel());
        }
        jScrollPane.setViewportView(listPanel);
        jScrollPane.getVerticalScrollBar().setUnitIncrement(20);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        jScrollPane = new JScrollPane();
        panel.add(jScrollPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        crearUsuariButton = new JButton();
        crearUsuariButton.setText("Crear usuari");
        panel1.add(crearUsuariButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
