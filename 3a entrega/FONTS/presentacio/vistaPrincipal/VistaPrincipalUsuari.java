package presentacio.vistaPrincipal;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import domini.item.Item;
import domini.usuari.UserException;
import presentacio.CtrlPresentacio;
import presentacio.vistaLlistaItems.FilaLlistaItems;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.util.List;

import static javax.swing.SwingUtilities.invokeLater;

/**
 * Classe que genera la vista principal de la sessió d'un client
 *
 * @author Hector Godoy Creus
 */
public class VistaPrincipalUsuari {
    private JPanel panel1;
    private JScrollPane jScrollPane1;
    private JButton recarregarItemsButton;

    public VistaPrincipalUsuari() {
        recarregarItemsButton.addActionListener(e ->
                new Thread(() ->
                        initList(CtrlPresentacio.getInstance().getCtrlDomini().ctrlItems.getItems())).start());
    }

    public static JMenuBar getMenuBar() {
        JMenuBar menuBar;
        JMenu menu;
        JMenuItem menuItem;

        //Create the menu bar.
        menuBar = new JMenuBar();

        //Build the File Menu.
        menu = new JMenu("Fitxer");
        menu.setMnemonic(KeyEvent.VK_F);
        menuBar.add(menu);

        menuItem = new JMenuItem("Carregar dades de fitxer...");
        menuItem.addActionListener(e -> CtrlPresentacio.getInstance().displayCarregarFitxers());
        menu.add(menuItem);

        menuItem = new JMenuItem("Desar estat del sistema...");
        menuItem.addActionListener(e -> CtrlPresentacio.getInstance().getCtrlDomini().desarEstat());
        menu.add(menuItem);

        //Add exit button
        menu.addSeparator();
        menuItem = new JMenuItem("Sortir");
        menuItem.addActionListener(e -> System.exit(0));
        menu.add(menuItem);

        menu = new JMenu("Usuari");
        menuBar.add(menu);

        menuItem = new JMenuItem("Valorar");
        menuItem.addActionListener(e -> CtrlPresentacio.getInstance().switchPanel("vistaPrincipalUsuari"));
        menu.add(menuItem);

        menuItem = new JMenuItem("Recomanacions");
        menuItem.addActionListener(e -> CtrlPresentacio.getInstance().switchPanel("vistaRecomanacionsUsuari"));
        menu.add(menuItem);

        menu = new JMenu("Sessio");
        menu.setMnemonic(KeyEvent.VK_A);
        menuBar.add(menu);

        menuItem = new JMenuItem("Tancar sessio");
        menuItem.addActionListener(e -> {
            try {
                CtrlPresentacio.getInstance().getCtrlDomini().ctrlUsuari.tancarSessio();
                CtrlPresentacio.getInstance().mostrarVistaIniciarSessio();
            } catch (UserException ex) {
                CtrlPresentacio.getInstance().displayError(ex.getMessage(), null);
            }
        });
        menu.add(menuItem);

        return menuBar;
    }

    public JPanel getPanel1() {
        return panel1;
    }

    public void initList(List<Item> items) {
        //Inicialitzem la llista amb els ítems indicats, si està buida mostrem un missatge
        JPanel loadingPanel = new JPanel(new BorderLayout());
        loadingPanel.add(new JLabel("Carregant...", JLabel.CENTER), BorderLayout.CENTER);
        invokeLater(() -> jScrollPane1.setViewportView(loadingPanel));
        if (items.isEmpty()) {
            JPanel emptyPanel = new JPanel(new BorderLayout());
            emptyPanel.add(new JLabel("No hi ha items al sistema", JLabel.CENTER), BorderLayout.CENTER);
            invokeLater(() -> jScrollPane1.setViewportView(emptyPanel));
        } else {
            JPanel listPanel = new JPanel(new GridLayout(items.size(), 1));
            for (Item item : items) {
                listPanel.add(new FilaLlistaItems(item).getItemPanel());
            }
            invokeLater(() -> {
                jScrollPane1.setViewportView(listPanel);
                // Anar a dalt
                jScrollPane1.getViewport().setViewPosition(new Point(0, 0));
                jScrollPane1.getVerticalScrollBar().setUnitIncrement(20);
            });
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        jScrollPane1 = new JScrollPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(jScrollPane1, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel2, gbc);
        recarregarItemsButton = new JButton();
        recarregarItemsButton.setText("Recarregar items");
        panel2.add(recarregarItemsButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel2.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}


