package presentacio.itemAdministration;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import presentacio.CtrlPresentacio;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class VistaManagementItems {
    private JPanel panel;
    private JButton definirAtributsButton;
    private JButton afegirItemButton;
    private JButton editarItemButton;
    private JButton eliminarItemButton;
    private JFrame frameDefinirAtributs = new JFrame("Definir Atributs");
    private JFrame frameAfegirItem = new JFrame("Afegir Items");
    private JFrame frameEditarItem = new JFrame("Editar Items");
    private JFrame frameEliminarItem = new JFrame("Eliminar Items");

    public JPanel getPanel() {
        return panel;
    }

    public VistaManagementItems() {

        definirAtributsButton.addActionListener(e -> {
            if (frameDefinirAtributs.isVisible()) return;
            frameDefinirAtributs = new JFrame("Definir Atributs");
            frameDefinirAtributs.pack();
            frameDefinirAtributs.setSize(new Dimension(690, 285));
            frameDefinirAtributs.setLocationRelativeTo(CtrlPresentacio.getInstance().frame);
            frameDefinirAtributs.setMinimumSize(new Dimension(500, 400));
            frameDefinirAtributs.setContentPane(new VistaDefinirAtributs(frameDefinirAtributs).panel);
            frameDefinirAtributs.setVisible(true);
        });
        afegirItemButton.addActionListener(e -> {
            if (CtrlPresentacio.getInstance().getCtrlDomini().atributsNoDefinits()) {
                CtrlPresentacio.getInstance().displayError("Primer cal definir els atributs", null);
                return;
            }
            if (frameAfegirItem.isVisible()) return;
            frameAfegirItem = new JFrame("Afegir Items");
            frameAfegirItem.pack();
            frameAfegirItem.setSize(new Dimension(500, 400));
            frameAfegirItem.setLocationRelativeTo(CtrlPresentacio.getInstance().frame);
            frameAfegirItem.setMinimumSize(new Dimension(500, 400));
            frameAfegirItem.setContentPane(new VistaAfegirItem(frameAfegirItem).panel);
            frameAfegirItem.setVisible(true);
        });
        editarItemButton.addActionListener(e -> {
            if (CtrlPresentacio.getInstance().getCtrlDomini().atributsNoDefinits()) {
                CtrlPresentacio.getInstance().displayError("Primer cal definir els atributs", null);
                return;
            }
            if (frameEditarItem.isVisible()) return;
            frameEditarItem = new JFrame("Editar Items");
            frameEditarItem.pack();
            frameEditarItem.setSize(new Dimension(600, 400));
            frameEditarItem.setLocationRelativeTo(CtrlPresentacio.getInstance().frame);
            frameEditarItem.setMinimumSize(new Dimension(550, 400));
            frameEditarItem.setContentPane(new VistaEditarItem(frameEditarItem).panel);
            frameEditarItem.setVisible(true);
        });
        eliminarItemButton.addActionListener(e -> {
            if (CtrlPresentacio.getInstance().getCtrlDomini().atributsNoDefinits()) {
                CtrlPresentacio.getInstance().displayError("Primer cal definir els atributs", null);
                return;
            }
            if (frameEliminarItem.isVisible()) return;
            frameEliminarItem = new JFrame("Eliminar Items");
            frameEliminarItem.pack();
            frameEliminarItem.setSize(new Dimension(300, 100));
            frameEliminarItem.setLocationRelativeTo(CtrlPresentacio.getInstance().frame);
            frameEliminarItem.setMinimumSize(new Dimension(280, 100));
            frameEliminarItem.setContentPane(new VistaEliminarItem(frameEliminarItem).panel);
            frameEliminarItem.setVisible(true);
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        definirAtributsButton = new JButton();
        Font definirAtributsButtonFont = this.$$$getFont$$$(null, -1, 14, definirAtributsButton.getFont());
        if (definirAtributsButtonFont != null) definirAtributsButton.setFont(definirAtributsButtonFont);
        definirAtributsButton.setHorizontalTextPosition(0);
        definirAtributsButton.setIcon(new ImageIcon(getClass().getResource("/presentacio/itemAdministration/resources/settings.png")));
        definirAtributsButton.setText("Definir Atributs");
        definirAtributsButton.setVerticalAlignment(0);
        definirAtributsButton.setVerticalTextPosition(3);
        panel1.add(definirAtributsButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel1.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(panel2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        afegirItemButton = new JButton();
        Font afegirItemButtonFont = this.$$$getFont$$$(null, -1, 14, afegirItemButton.getFont());
        if (afegirItemButtonFont != null) afegirItemButton.setFont(afegirItemButtonFont);
        afegirItemButton.setHorizontalTextPosition(0);
        afegirItemButton.setIcon(new ImageIcon(getClass().getResource("/presentacio/itemAdministration/resources/add.png")));
        afegirItemButton.setText("Afegir Item");
        afegirItemButton.setVerticalAlignment(0);
        afegirItemButton.setVerticalTextPosition(3);
        panel2.add(afegirItemButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        editarItemButton = new JButton();
        Font editarItemButtonFont = this.$$$getFont$$$(null, -1, 14, editarItemButton.getFont());
        if (editarItemButtonFont != null) editarItemButton.setFont(editarItemButtonFont);
        editarItemButton.setHorizontalTextPosition(0);
        editarItemButton.setIcon(new ImageIcon(getClass().getResource("/presentacio/itemAdministration/resources/edit.png")));
        editarItemButton.setText("Modificar Item");
        editarItemButton.setVerticalAlignment(0);
        editarItemButton.setVerticalTextPosition(3);
        panel2.add(editarItemButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        eliminarItemButton = new JButton();
        Font eliminarItemButtonFont = this.$$$getFont$$$(null, -1, 14, eliminarItemButton.getFont());
        if (eliminarItemButtonFont != null) eliminarItemButton.setFont(eliminarItemButtonFont);
        eliminarItemButton.setHorizontalTextPosition(0);
        eliminarItemButton.setIcon(new ImageIcon(getClass().getResource("/presentacio/itemAdministration/resources/delete.png")));
        eliminarItemButton.setText("Eliminar Item");
        eliminarItemButton.setVerticalAlignment(0);
        eliminarItemButton.setVerticalTextPosition(3);
        panel2.add(eliminarItemButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
